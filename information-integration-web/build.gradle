import org.ysb33r.gradle.nodejs.tasks.NpmTask

plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.ysb33r.nodejs.npm' version '0.12.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.postgresql:postgresql:42.3.1'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}

java{
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

nodejs {
    executableBySearchPath('node')
}

npm {
    executableBySearchPath('npm')
    homeDirectory = 'web'
}

sourceSets {
    main {
        resources {
            srcDirs += 'src/main/gen-resources'
        }
    }
}

task frontendDeps(type: NpmTask ) {
    workingDir npm.homeDirectory
    inputs.files fileTree(workingDir).matching {
        include 'package.json'
    }
    outputs.files fileTree(workingDir).matching {
        include 'node_modules/', 'package-lock.json'
    }

    command 'install'
}

task buildFrontend(type: NpmTask ) {
    workingDir npm.homeDirectory
    dependsOn frontendDeps

    inputs.files fileTree(workingDir).matching {
        exclude 'dist/'
    }
    outputs.files fileTree(workingDir).matching {
        include 'dist/'
    }

    command 'run'
    cmdArgs 'build'
}

task deleteFrontend {
    delete fileTree('src/main/gen-resources/')
}
clean.dependsOn('deleteFrontend')

task shipFrontend(type: Copy) {
    dependsOn buildFrontend

    from "${npm.homeDirectory}/dist/"
    into 'src/main/gen-resources/static'
}
// add an explicit dependency on the frontend to the processResources task
processResources.dependsOn('shipFrontend')
